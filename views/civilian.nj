{% extends "partials/user/base.nj" %}

{% block head %}
    <title>Civilian {{ userId }}</title>
{% endblock %}
{% block content %}
    <div id="user-stuff">

        <h1> Hello, Civilian {{ userId }}
        </h1>

        <h4 id="notification"></h4>
        <button onclick="requestForHelp()">
            Request for help
        </button>

    </div>

    <div id="map">
        <!-- Load a map here -->
    </div>

    <script src="/socket.io/socket.io.js"></script>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <!-- <script src="https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.js"></script> -->

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDRYhkASG4k8H08cIW-bVdOPqAYn4nyDiY&callback=initMap"
        async defer></script>

    <script type="text/javascript">
        const socket = io();

        const userId = document
            .body
            .getAttribute("data-userId");
        socket.emit("join", {userId: userId}); // Join a room, room-name is the userId itself!

        // Empty variables to store information. This will get filled later
        let requestDetails = {};
        let copDetails = {};
        var map,
            marker,
            myLatLng;

        // L.mapbox.accessToken = "pk.eyJ1Ijoib2NodWkiLCJhIjoiY2s4YTF4aDdpMGNnMDNscW1qYWEwanZqNSJ9.YxG1tPGUiIPFd8NsqSfauA";
        // map = L.mapbox.map("map", "mapbox.streets");  Load the map and give it a default style

        var infoWindow;
        function initMap() {
            map = new google
                .maps
                .Map(document.getElementById('map'), {
                    center: {
                        lat: 6.465422,
                        lng: 3.406448
                    },
                    zoom: 14
                });
            infoWindow = new google.maps.InfoWindow;

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator
                    .geolocation
                    .getCurrentPosition(function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        infoWindow.open(map);
                        map.setCenter(pos);
                    }, function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(
                browserHasGeolocation
                ? 'Error: The Geolocation service failed.'
                : 'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }

        function errorHandler(err) {
            if (err.code == 1) {
                alert("Error: Access is denied!");
            } else if (err.code == 2) {
                alert("Error: Position is unavailable!");
            }
        }

        if (navigator.geolocation) {
            navigator
                .geolocation
                .getCurrentPosition(function (data) {
                    console.log(data)
                    requestDetails = {
                        civilianId: userId,
                        location: {
                            // address: data.feature["place_name"],
                            latitude: data.coords.latitude,
                            longitude: data.coords.longitude
                        }
                    }

                    marker = new google
                        .maps
                        .Marker({
                            position: {
                                lat: data.coords.latitude,
                                lng: data.coords.longitude
                            },
                            title: "Hello World!"
                        });

                    // To add the marker to the map, call setMap();
                    marker.setMap(map);
                })

            const options = {
                timeout: 60000
            };
            watchID = navigator
                .geolocation
                .watchPosition(data => {

                    marker = new google
                        .maps
                        .Marker({
                            position: {
                                lat: data.coords.latitude,
                                lng: data.coords.longitude
                            },
                            title: "Hello World!"
                        });

                    // To add the marker to the map, call setMap();
                    marker.setMap(map);
                }, errorHandler, options);
        } else {
            alert('location error')
        }

        function requestForHelp() { // When button is clicked, emit an event
            console.log(requestDetails)
            socket.emit("request-for-help", requestDetails);
        }

        // Listen for a 'request-accepted' event
        socket.on("request-accepted", (eventData) => {
            copDetails = eventData; // Save cop details

            // Display Cop address
            document
                .getElementById("notification")
                .innerHTML = `${copDetails.displayName} is near ${copDetails.location.address} and will be arriving at your location shortly.
                You can reach them at their mobile ${copDetails.phone}`;

            // Show cop location on the map
            var copLatLng = {
                lat: copDetails.location.latitude,
                lng: copDetails.location.longitude
            };
            marker = new google
                .maps
                .Marker({
                    position: copLatLng,
                    title: "Hello World!",
                    image: {
                        url: '/images/cop.png',
                        // This marker is 20 pixels wide by 32 pixels high.
                        size: new google
                            .maps
                            .Size(60, 28),
                        // The origin for this image is (0, 0).
                        // origin: new google.maps.Point(0, 0),
                        // The anchor for this image is the base of the flagpole at (0, 32).
                        // anchor: new google.maps.Point(0, 32)
                    }
                });

            // To add the marker to the map, call setMap();
            marker.setMap(map);
        });

        // Use MapBox geo-coding API
        // map.addControl(L.mapbox.geocoderControl("mapbox.places", {
        //     autocomplete: true,
        // }).on("select", (data) => {  This function runs when a place is selected
        //     console.log(data);  data contains the geocding results

        //      Extract address and coordinates from the results and save it
        //     requestDetails.location = {
        //         address: data.feature["place_name"],
        //         latitude: data.feature.center[1],
        //         longitude: data.feature.center[0]
        //     };

        //     marker.setLatLng([data.feature.center[1], data.feature.center[0]]);  Set the marker to new location
        // }));
    </script>

{% endblock %}